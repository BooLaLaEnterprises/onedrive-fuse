[permission]
# Readonly mode. Default to be true.
readonly = true
# Owner user and group id for all files and directories, since OneDrive files don't have UNIX UID or GID.
# Default to be UID and GID of the current process.
#uid = 1000
#gid = 1000
# The global umask (`umask`) and umask applied to files (`fmask`) and directories (`dmask`).
# Default to be the umask of the current process.
#umask
#fmask = 0o022
#dmask = 0o022

[relogin]
# Whether to enable auto-relogin.
# Normally the token returned is available for 3600 s (1 hour). We need to periodly re-login
# to get a new token if need to serve for a long time.
# The refresh token returned will be periodly saved to credential file, so keep that file writable.
enable = true
# Check period in seconds.
# We will periodly check current time for whether need re-login, instead of sleep to the target time,
# since system time may change and the system may suspend and resume.
# This is also the retry delay if a re-login attempt failed.
check_period = 60
# Time in seconds before the token expiration to start re-login.
# If current time is after the expiration time (returned in login response) minus `time_before_expire`,
# it tries to re-login.
time_before_expire = 600
# Minimal login cooldown time in seconds.
# No re-login will be performed in `min_live_time` after a successful login, even though the condition
# of `time_before_expire` reached.
min_live_time = 60

[vfs.tracker]
# Enable incremental tracking for remote side changes periodically.
# Any content or attributes changed on remote side will cause local cache to be updated or invalidated.
# If tracking is disabled, we assume that nothing can be changed on remote side once fetched,
# otherwise, it will lead to inconsistency.
enable = true
# Period in seconds to poll change events.
period = 10
# Page size when fetching changes.
fetch_page_size = 512
# Max changes can be updated. If there are too many changes between two polling, all cache will be dropped
# and tracking is re-started from current state.
max_changes = 2048

[vfs.statfs]
# Cache timeout in seconds for statfs information.
cache_ttl = 300

[vfs.inode]
# Size of LRU cache of inode metadata which are not referenced.
dead_lru_cache_size = 4096

[vfs.dir]
# Size of LRU cache for contents of directories.
lru_cache_size = 4096

[vfs.file]
